#!/bin/bash
#     ji-gitrel-mvn-1.0.3 - grelc
#
#     Copyright (c) 2014,2015 Jirvan Pty Ltd
#     All rights reserved.
#
#     Redistribution and use in source and binary forms, with or without modification,
#     are permitted provided that the following conditions are met:
#
#     * Redistributions of source code must retain the above copyright notice,
#     this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright notice,
#     this list of conditions and the following disclaimer in the documentation
#     and/or other materials provided with the distribution.
#     * Neither the name of Jirvan Pty Ltd nor the names of its contributors
#     may be used to endorse or promote products derived from this software
#     without specific prior written permission.
#
#     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
#     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
#     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
#     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
#     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
#     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
#     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

source gitrellib.sh

verifyNoUncommittedChanges
verifyNoUnpushedCommits
verifyHeadIsNotDetached
verifyPomFileHasASnapshotVersion

ORIG_BRANCH=`git branch| grep '^\* '|sed 's/\* //'`

# Extract release version etc
echo
echo "  - Extracting version from POM file snapshot version"
RELEASE_VERSION=`mvn blah|egrep '^\[INFO\] Building .+ [0-9]+\.[0-9.]*[0-9]+-SNAPSHOT$'|sed 's/\[INFO\] Building .* //'|sed 's/-SNAPSHOT$//'`
LAST_RELEASE_CANDIDATE_NUMBER=`git tag|egrep '^v'$RELEASE_VERSION'_rc[0-9]+$'|sed 's/v'$RELEASE_VERSION'_rc/'/|sort|tail -n 1`
NEXT_RELEASE_CANDIDATE_NUMBER=$(($LAST_RELEASE_CANDIDATE_NUMBER + 1))
RELEASE_CANDIDATE_VERSION="$RELEASE_VERSION""_rc"$NEXT_RELEASE_CANDIDATE_NUMBER

verifyTagDoesNotExist "v$RELEASE_VERSION"
confimBeforeProceeding "  Do you wish to create release candidate v$RELEASE_CANDIDATE_VERSION (y/n) ?"

# Create a POM version modified and tagged version on a temp branch then return to original branch
TEMP_BRANCH="v$RELEASE_CANDIDATE_VERSION""_tmpBranch"
checkoutOnANewBranch $TEMP_BRANCH
updateProjectAndModulePomfileVersions $RELEASE_CANDIDATE_VERSION
addAllModificationsAndCommitWithMessage "v"$RELEASE_CANDIDATE_VERSION
tagAndPushTagToOrigin v$RELEASE_CANDIDATE_VERSION
checkout $ORIG_BRANCH
tagAndPushTagToOrigin "v"$RELEASE_CANDIDATE_VERSION"_created"
deleteBranch $TEMP_BRANCH

echo
